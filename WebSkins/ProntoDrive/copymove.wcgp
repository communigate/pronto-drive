/*

  Copyright 2014 Anton Katsarov <anton@webface.bg>

  Distributed under the MIT License.

  See accompanying file COPYING or copy at
  http://opensource.org/licenses/MIT

*/
/*
  Descrition:

  Copys and moves files/folders
*/

function copyFile(source, dest) forward;
function copyFolder(source, dest) forward;
function CLIReadStorageFile(s) forward;

entry main is
  MyAccountName = MyEmail();
  if IsString(MyAccountName) then
    context = GetHTTPParameter("context",0);
    destination = GetHTTPParameter("destination",0);
    if (FindSubstring(destination, "~") != 0) then
      if destination == "//" then
        destination = "";
      end if;
      destination = "/private" + destination;
    end if;
    path = GetHTTPParameter("SubDir",0);
    if (FindSubstring(path, "~") != 0) then
      path = "/" + path;
    end if;
    errors = NewArray();

      for i = 0  while i < 10000 by i+= 1 loop
        folderName = GetHTTPParameter("folder",i);
        exitif !IsString(folderName);
        folderPath = path + "/" + folderName;
        folderDestination = destination + "/" + folderName;
        result = null;
        if IsString(context) && context == "move" then
          result = RenameStorageDirectory(folderPath, folderDestination);
        else
          result = copyFolder(folderPath, folderDestination);
        end if;
        if result != null then
          if IsArray(result) then
            for j = 0 while j < Length(result) by j += 1 loop
              errors.addElement(result[j] + ": " + folderPath);
            end loop;
          else
            errors.addElement(String(result) + ": " + folderPath);
          end if;
        end if;
      end loop;
      for i = 0  while i < 10000 by i+= 1 loop
        fileName = GetHTTPParameter("file",i);
        exitif !IsString(fileName);
        filePath = path + "/" + fileName;
        fileDestination = destination + "/" + fileName;
        result = null;
        if IsString(context) && context == "move" then
          result = RenameStorageFile(filePath, fileDestination);
        else
          result = copyFile(filePath, fileDestination);
        end if;
        if result != null then
          errors.addElement(result + ": " + filePath);
        end if;
      end loop;

    SetHTTPResponseData(ObjectToJSON(errors));
  end if;
end entry;

function copyFile(source, dest) is
    data = CLIReadStorageFile(source);
    if IsData(IsArray(data) && data[0]) then
      result = WriteStorageFile(dest,data[0]);
      return result;
    else
      return data;
    end if;
end function;

function copyFolder(source, dest) is
  listedFolder = ListStorageFiles(source);
  if listedFolder == null then
    return "Folder not found";
  end if;

  createResult = CreateStorageDirectory(dest);
  if IsString(createResult) then
    return createResult;
  end if;
  errors = newArray();
  for i = 0 while i < Length(listedFolder) by i+=1 loop
    exitif !IsString(listedFolder[i]);
    if IsNumber(listedFolder.(listedFolder[i]).STFileSize) then
      result = copyFile(source + "/" + listedFolder[i], dest + "/" + listedFolder[i]);
      if result != null then
        errors.addElement(result + ": " + source + "/" + listedFolder[i]);
      end if;
    else
      result = copyFolder(source + "/" + listedFolder[i], dest + "/" + listedFolder[i]);
      if result != null then
        if IsArray(result) then
          for j = 0 while j < Length(result) by j += 1 loop
            errors.addElement(result[j] + ": " + folderPath);
          end loop;
        else
          errors.addElement(String(result) + ": " + folderPath);
        end if;
      end if;
    end if;
  end loop;
  return errors;
end function;

function CLIReadStorageFile(s) is
    account = MyEmail();
    if (FindSubstring(s, "~") == 0) then
      account = Substring(s, 1, FindSubstring(s, "/") - 1);
      s = Substring(s, FindSubstring(s, "/"), Length(s));
    end if;

    cmd = "READSTORAGEFILE " + account + " FILE " + ObjectToString(s);
    s = null;
    rc = ExecuteCLI(cmd);
    if not IsString(rc) then
        s = Vars().executeCLIResult;
    else
     s = "CLI: " + rc;
    end if;
    return s;
end function;
