/*

  Copyright 2013 Anton Katsarov <anton@webface.bg>

  Distributed under the MIT License.

  See accompanying file COPYING or copy at
  http://opensource.org/licenses/MIT

*/
/*
  Descrition:

  Listst accounts files and folders
*/

function prontodrive::sizeReadable(size, type) external;
function prontodrive::dateReadable(theDate) external;
function getSubscriptions() forward;

function list() is
    // Check if private Folder exists
    rootFolder = ListStorageFiles("");
    baseFound = false;
    for i = 0  while i < Length(rootFolder) by i+= 1 loop
      if !IsNumber(rootFolder.(rootFolder[i]).STFileSize) && rootFolder[i] == "private" then
        baseFound = true;
      end if;
      exitif baseFound;
    end loop;
    if !baseFound then
      creationResult = CreateStorageDirectory("private");
    end if;

    //List Folders
    theSet = NewDictionary();
    theSet.Folders = NewArray();
    theSet.Files = NewArray();
    folder = "private";
    path = GetHTTPParameter("path",0);
    if (FindSubstring(path, "~") == 0) then
      theSet.Shared = true;
      folder = path;
      theSet.path = path;
      path = String(FindRegEx(path,"^.+/"));
      path = Substring(path, 2, Length(path) - 5);
      theSet.Upper = path;
      // if (FindSubstring(theSet.path, "/private") < 0) then
      //   folder = "private";
      //   theSet.Upper = null;
      // end if;
    elif IsString(path) && path != "" && path != " " then
      folder = folder + "/" + path;
      theSet.path = path;
      path = String(FindRegEx(path,"^.+/"));
      path = Substring(path, 2, Length(path) - 5);
      if !IsString(path) then
        path = " ";
      end if;
      theSet.Upper = path;
    end if;
    listedFolder = ListStorageFiles(folder);
    if listedFolder == null then
      theSet.notFound = folder;
    else
      for i = 0 while i < Length(listedFolder) by i+=1 loop
        theElement = NewDictionary();
        exitif !IsString(listedFolder[i]);
        theElement.Modified = prontodrive::dateReadable(listedFolder.(listedFolder[i]).STModified);
        theElement.Name = listedFolder[i];
        theElement.Path = theSet.path || " ";
        ext = String(FindRegEx(ToLowerCase(listedFolder[i]),"[.][a-z0-9]+$"));
        theElement.Ext = Substring(ext, 2, Length(ext) - 3);
        if IsNumber(listedFolder.(listedFolder[i]).STFileSize) then
          theElement.Size = prontodrive::sizeReadable(listedFolder.(listedFolder[i]).STFileSize, "B");
          theSet.Files.addElement(theElement);
        else
          if listedFolder[i] != "IM" && listedFolder[i] != "_upload" && listedFolder[i] != "settings" && listedFolder[i] != "logs" || folder !="private" then
            theSet.Folders.addElement(theElement);
          end if;
        end if;
      end loop;
    end if;
    if folder == "private" then
      theSet.Subscriptions = getSubscriptions();
    end if;
    return theSet;
end function;

function getSubscriptions() is
    s = null;
    cmd = "GETFILESUBSCRIPTION *";
    rc = ExecuteCLI(cmd);
    if not IsString(rc) then
        s = Vars().executeCLIResult;
    end if;
    return s;
end function;
