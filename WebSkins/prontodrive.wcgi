/*

  Copyright 2014 Anton Katsarov <anton@webface.bg>

  Distributed under the MIT License.

  See accompanying file COPYING or copy at
  http://opensource.org/licenses/MIT

*/
/*
  Descrition:

  Some commonly used functions in Pronto Drive.
*/


function addSharePass(filepath, pass) is
   attr = ReadStorageFileAttr(filepath, "accessPwd");
   for i = 0  while i < Length(attr) by i+= 1 loop
      tmpPass = String(attr[i].XMLBody(null, null, 0));
      if tmpPass == pass then
         return "Already exists.";
      end if;
   end loop;
   newPwd = NewXML("accessPwd");
   newKey = NewXML("key");
   newKey.addElement(String(pass));
   newPwd.addElement(newKey);
   newPwd.setAttribute("add", "mode");
   attr = newArray();
   attr.AddElement(newPwd);
   return WriteStorageFileAttr(filepath, attr);
end function;

function deleteSharePass(filepath, pass) is
   newPwd = NewXML("accessPwd");
   newKey = NewXML("key");
   newKey.addElement(String(pass));
   newPwd.addElement(newKey);
   newPwd.setAttribute("delete", "mode");
   attr = ReadStorageFileAttr(filepath, "accessPwd");
   keepedAttr = newArray();
   for i = 0  while i < Length(attr) by i+= 1 loop
      tmpPass = String(attr[i].XMLBody(null, null, 0));
      if tmpPass != pass then
         attr[i].setAttribute("add", "mode");
         keepedAttr.addElement(attr[i]);
      end if;
   end loop;
   attr.AddElement(newPwd);
   result = WriteStorageFileAttr(filepath, attr);
   return WriteStorageFileAttr(filepath, keepedAttr);
end function;

function sizeReadable(size, type) is
if type == "B" then
  if IsNumber(size) then
    if size > 1024 then
      localType = "B";
      if type == "B" then
        localType = "kB";
      elif type == "kB" then
        localType = "MB";
      elif type == "MB" then
        localType = "GB";
      elif type == "GB" then
        localType = "TB";
      end if;
      size = sizeReadable(size/1024, localType);
      return size;
    else
      return String(size) + type;
    end if;
  else
    return "O" + type;
   end if;
end function;

function dateReadable(theDate) is
  stringDate = String(theDate);
  return Substring(stringDate,0,10) + " " + Substring(stringDate,11,20);
end function;

function split(devider, str) is
   strings = NewArray();
   position = FindSubstring(str, devider);
   loop
      position = FindSubstring(str, devider);
      if position < 0 then
         AddElement(strings, str);
      end if;
      exitif position < 0;
      substr = Substring(str, 0, FindSubstring(str, devider));
      AddElement(strings, substr);
      str = Substring(str, FindSubstring(str, devider) + 1, Length(str));
   end loop;
   return strings;
end function;

function UnixTimestamp(dateTime) is
    return DateNumber(dateTime)*86400 + TimeOfDay(dateTime);
end function;
